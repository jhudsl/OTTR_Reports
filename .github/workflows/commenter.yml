# Candace Savonen Mar 2022

name: Comment Artifact URL on PR

on:
  workflow_dispatch:
  workflow_run:
    types:
      - "completed"
    workflows:
      - "Testing ottr-reports"

jobs:
  comment-on-pr:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:

    - name: Get Artifact URL & PR Info
      env:
        GITHUB_TOKEN: ${{ github.token }}
        OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
        WORKFLOW_RUN_EVENT_OBJ: ${{ toJSON(github.event.workflow_run) }}
      run: |

        PREVIOUS_JOB_ID=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
        echo "Previous Job ID: $PREVIOUS_JOB_ID"
        echo "PREVIOUS_JOB_ID=$PREVIOUS_JOB_ID" >> "$GITHUB_ENV"

        ARTIFACT_URL=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
          --jq ".artifacts.[] |
          select(.workflow_run.id==${PREVIOUS_JOB_ID}) |
          select(.expired==false) |
          .archive_download_url")

        echo "ARTIFACT URL: $ARTIFACT_URL"
        echo "ARTIFACT_URL=$ARTIFACT_URL" >> "$GITHUB_ENV"

        PR_NUMBER=$(jq -r '.pull_requests[0].number' \
          <<< "$WORKFLOW_RUN_EVENT_OBJ")

        echo "PR Number: $PR_NUMBER"
        echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"

        HEAD_SHA=$(jq -r '.pull_requests[0].head.sha' \
          <<< "$WORKFLOW_RUN_EVENT_OBJ")

        echo "Head sha: $HEAD_SHA"
        echo "HEAD_SHA=$HEAD_SHA" >> "$GITHUB_ENV"

    - name: Declare file path and time
      id: file-path
      run: |
        branch_name='preview-${{ github.event.pull_request.number }}'
        echo "link_to_ignore_file=https://github.com/${GITHUB_REPOSITORY}/edit/${{ inputs.branch_name }}/${{ steps.setup.outputs.ignore_file }}" >> $GITHUB_OUTPUT
        echo "time=$(date +'%Y-%m-%d-%T')" >> $GITHUB_OUTPUT
        echo "error_url=https://github.com/${GITHUB_REPOSITORY}/blob/$branch_name/${{ steps.check_results.outputs.report_path }}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Find Comment Again
      uses: peter-evans/find-comment@v3
      id: fc2
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: ${{ steps.setup2.outputs.error_name }}

    - name: Say check is incomplete
      if: steps.check_results.outcome == 'failure'
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.fc2.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          :warning: Check: ${{ steps.setup2.outputs.error_name }} did not fully run! Go to the `Actions` tab to find more info.
          Post issue to https://github.com/jhudsl/OTTR_Template/issues if this seems incorrect.
          _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
        edit-mode: replace

    - name: Stop if failure
      if: steps.check_results.outcome == 'failure'
      run: exit 1
      shell: bash
  ############################# Handle commenting ################################

    - name: Commit check files to branch
      id: commit
      run: |
        branch_name='preview-${{ github.event.pull_request.number }}'

        git add ${{ steps.check_results.outputs.report_path }} --force || echo "No changes to commit"
        git commit -m 'Check file' || echo "No changes to commit"
        git pull --rebase --set-upstream origin $branch_name --allow-unrelated-histories --strategy-option=ours
        git push --force || echo "No changes to commit"

        error_num=$(cat ${{ steps.check_results.outputs.report_path }} | wc -l)
        error_num="$((error_num-1))"
        echo "error_num=$error_num" >> $GITHUB_OUTPUT
      shell: bash

    - name: There are errors!
      if: ${{ steps.commit.outputs.error_num > inputs.error_min }}
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.fc2.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          :warning: ${{ steps.setup2.outputs.error_name }} :warning:
          There are ${{ steps.setup2.outputs.error_name }} that need to be addressed.
          Click here :arrow_right: [for ${{ steps.setup2.outputs.error_name }}!](${{ steps.file-path.outputs.error_url }}) :exclamation:
          Add errors that aren't errors to the [${{ steps.setup2.outputs.ignore_file }}](${{ steps.file-path.outputs.link_to_ignore_file }}) file of this repo.
          If you are having troubles see [this guide](https://www.ottrproject.org/faqs.html#Most_Common_Errors)
          _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
        edit-mode: replace

    - name: Fail if too many errors
      if: ${{ steps.commit.outputs.error_num > inputs.error_min }}
      run: |
        echo ${{ steps.commit.outputs.error_num }}
        exit 1
      shell: bash

    - name: Don't fail if not too many errors
      if: ${{ steps.commit.outputs.error_num <= inputs.error_min }}
      run: |
        echo ${{ steps.commit.outputs.error_num }}
      shell: bash

    - name: No errors comment
      if: ${{ steps.commit.outputs.error_num <= inputs.error_min }}
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.fc2.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          No ${{ steps.setup2.outputs.error_name }}! :tada:
          _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
        edit-mode: replace
